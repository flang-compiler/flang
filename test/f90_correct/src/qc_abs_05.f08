!** Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
!** See https://llvm.org/LICENSE.txt for license information.
!** SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

!*  Test intrinsics function abs with quad precision complex.

program main
  use check_mod
  implicit none
  integer, parameter :: k = 16
  complex(kind=k), parameter :: t1 = (1.09743854683567436575475645464E+491_16, &
                                      2355676834565.5345089345768987451E+131_16)
  complex(kind=k), parameter :: t2 = (-0.7347543453434546984354698954E+931_16, &
                                      -1.10945989034995646345345099345E+2131_16)
  complex(kind=k), parameter :: t3 = (-9.2836408906234783498784564657E+31_16, &
                                      5.1232345674567894242424891E+31_16)
  complex(kind=k), parameter :: t4 = (8912.3456789123456789095675861E-931_16, &
                                      -456789.42424242345678967874631E-1131_16)
  complex(kind=k), parameter :: t5 = (89123.4567891234590856767667891E+331_16, &
                                      0.9678347688340982376854345875978E+431_16)
  complex(kind=k), parameter :: t6 = (905467.347567878936567899806787E+1831_16,&
                                      956.5768790934576688908345678789E+1831_16)
  complex(kind=k), parameter :: t7 = (-1.1232783232789123456793476578E+1831_16,&
                                      1.123453242421234567891770566787E+1831_16)
  complex(kind=k) :: t8 = (89123.4567824291234564567894244789046671E+1931_16, &
                           3.56823381542321992212155978657565677567665E+1131_16)
  complex(kind=k) :: t9 = (-67.567569889235467956707684567034565545E-1931_16, &
                           -1.09567376545656789809345678345756578775E-1131_16)
  complex(kind=k) :: t10
  real(kind=k) :: rslt(12), expect(12)

  t10 = (-87647832.8423767856798345235453345E+931_16, &
         98623.73446774320985662348739048767891E-131_16)

  rslt(1) = abs(f1(t1))
  rslt(2) = abs(f1(t2))
  rslt(3) = abs(f1(t3))
  rslt(4) = abs(f1(t4))
  rslt(5) = abs(f1(t5))
  rslt(6) = abs(f1(t6))
  rslt(7) = abs(f1(t7))
  rslt(8) = abs(f1(t8))
  rslt(9) = abs(f1(t9))
  rslt(10) = abs(f1(t10))
  rslt(11:12) = abs(f2([(1.1234567891234567891234567891E+931_16, &
                         1.1234567894242424234567891E+431_16), &
                        (-1.9085645665454634567891092345407998578E-31_16, &
                         -78.5673485676587905675347657878968E+31_16)]))

  expect = (/2.40387173048891707440766757714269861E+1035_16, &
             2.43020374508764070663336570110842749E+2675_16, &
             2.32262440292139820417734886581030071E+0576_16, &
             1.95219457997500055246439202829792733E-0383_16, &
             2.11998261523880320302001552108189592E+0975_16, &
             1.98337171645447163764869208001645834E+2381_16, &
             3.47990405609801207396253155271630013E+2375_16, &
             1.95219457982836529257489342769935708E+2480_16, &
             2.40000608527355677722486729996516939E-0587_16, &
             1.91987194377231986000664586299472255E+1483_16, &
             2.46086309214005524650005524644867466E+1475_16, &
             1.72096951310699511826750296904745056E+0577_16/)

  call checkr16(rslt, expect, 12, rtoler = 1.0E-33_16)

contains
complex(kind=16) function f1(x)
  complex(kind=16) :: x
  f1 = x * (2.19043857847E+544_16, 1.34507887453E+242_16)
end function f1

function f2(y) result(z)
  complex(kind=16) :: y(2), z(2)
  z = y * (2.19043857847E+544_16, 1.34507887453E+242_16)
end function f2
end program main
